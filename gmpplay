#!/usr/bin/env bash

# Easy GMusicProxy helper
# Created by onespaceman
# https://github.com/onespaceman/gmpplay

# Requires MPD, MPC, and GMusicProxy

usage () {
    printf "%s\n" "
$(tput bold)ABOUT$(tput sgr0)
    $(tput bold)gmpplay$(tput sgr0) - Easily add music through GMusicProxy

$(tput bold)USAGE$(tput sgr0)
    $(tput bold)gmpplay$(tput sgr0) [options] Artist - Title

    Options are to be combined like so: -cra
    The artist and title is to be separated with a dash -

$(tput bold)OPTIONS$(tput sgr0)
    The default action of gmpplay is to add an artist.

    $(tput bold)-a$(tput sgr0) Add an album
    $(tput bold)-s$(tput sgr0) Add a song
    $(tput bold)-r$(tput sgr0) Create a radio station from an artist, album or song.
    $(tput bold)-h$(tput sgr0) Show help
    $(tput bold)-c$(tput sgr0) Clear the queue in mpd before adding songs
    "
    exit
}

# Default variables
numtracks=100 # Max number of tracks to get
search_type="get_by_search"
search_for="artist"

# Options
while getopts "hcasr" opt; do
    case $opt in
        h) usage ;;
        c) doclear=1 ;;
        a) search_for="album" ;;
        s) search_for="song"
            numtracks=1 ;;
        r) search_type="get_new_station_by_search" ;;
        \?) usage ;;
    esac
    shift $((OPTIND-1))
done


# Check if artist/title is given and prompt if not
if (( "$#" != 0 )); then
    IFS="-" read -r artist title <<< "$@"
else
    printf "Artist: "
    read artist
    if [ $option != "searchartist" ]; then
        printf "Title: "
        read title
    fi
fi

# Start GMusicProxy if not running
if ! pgrep GMusicProxy >/dev/null 2>&1; then
    GMusicProxy || { echo "GMusicProxy not running"; exit; }
fi

# Get MPD config from ~/.config/mpd/mpd.conf
mpd_host=$(grep -F "bind_to_address" ${XDG_CONFIG_HOME:-$HOME/.config}/mpd/mpd.conf \
    2>/dev/null | cut -d '"' -f2)
mpd_host="${mpd_host:-localhost}"

mpd_port=$(grep -F "port" ${XDG_CONFIG_HOME:-$HOME/.config}/mpd/mpd.conf \
    2>/dev/null | cut -d '"' -f2)
mpd_port="${mpd_port:-6600}"

# Get GMusicProxy config from ~/.config/gmusicproxy.cfg
gmp_host=$(grep -F "host" ${XDG_CONFIG_HOME:-$HOME/.config}/gmusicproxy.cfg \
    2>/dev/null | cut -d '=' -f2 | sed 's/^[ \t]*//')
gmp_host="${gmp_host:-localhost}"

gmp_port=$(grep -F "port" ${XDG_CONFIG_HOME:-$HOME/.config}/gmusicproxy.cfg \
    2>/dev/null | cut -d '=' -f2 | sed 's/^[ \t]*//')
gmp_port="${gmp_port:-9999}"

# Clear mpc queue
[[ -z "$doclear" ]] || mpc -q clear

# Get music with GMusicProxy
search_url="http://$gmp_host:$gmp_port/$search_type?type=${search_for}&artist=${artist// /%}&title=${title// /%}&num_tracks=$numtracks"

if [[ "$search_for" = "song" ]] && [[ "$search_type" = "get_by_search" ]]; then
    mpc add "$search_url"
else
    playlist=$(curl -s "$search_url")
    printf "$playlist" | grep -v "^#" | while read url; do mpc add "$url"; done

    # Import playlist into arrays
    while read line; do
        p_artist+=("${line%% - *}")
        tmp="${line#* - }"
        p_title+=("${tmp% - *}")
        p_album+=("${line##* - }")
    done <<< "$(printf "$playlist" | sed -n 0~2p | sed -e 's/.*[0-9],//')"

    # Get the current playlist info
    exec 5<> /dev/tcp/$mpd_host/$mpd_port 2>/dev/null
    sleep 0.5s
    printf "%s\n" "playlistid" >&5
    printf "%s\n" "close" >&5
    idlist=($(cat <&5 | sed '/ Id: /,/ file:/d' | sed -n '/^Id: /p' | sed 's/Id: //'))
    exec 5>&-

    # Add tags
    exec 5<> /dev/tcp/$mpd_host/$mpd_port 2>/dev/null
    sleep 0.5s
    for ((i=${#idlist[@]}-${#p_artist[@]}, j=0; i<${#p_artist[@]}, j<${#p_artist[@]}; i++, j++)) do
        printf "%s\n" "cleartagid ${idlist[$i]}" >&5
        printf "%s\n" "addtagid ${idlist[$i]} artist \"${p_artist[$j]}\"" >&5
        printf "%s\n" "addtagid ${idlist[$i]} title \"${p_title[$j]}\"" >&5
        printf "%s\n" "addtagid ${idlist[$i]} album \"${p_album[$j]}\"" >&5
    done
    printf "%s\n" "close" >&5
    exec 5>&-
fi

mpc -q  play
