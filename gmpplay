#!/usr/bin/env bash

# Easy GMusicProxy helper
# Created by onespaceman
# https://github.com/onespaceman/gmpplay

# Requires MPD, MPC, and GMusicProxy

usage () {
    echo "
$(tput bold)ABOUT$(tput sgr0)
    $(tput bold)gmpplay$(tput sgr0) - Easily add music through GMusicProxy

$(tput bold)USAGE$(tput sgr0)
    $(tput bold)gmpplay$(tput sgr0) [options] Artist - Title

    Options are to be combined like so: -cra
    The artist and title is to be separated with a dash -

$(tput bold)OPTIONS$(tput sgr0)
    The default action of mpdplay is to add an artist.

    $(tput bold)-a$(tput sgr0) Add an album
    $(tput bold)-s$(tput sgr0) Add a song
    $(tput bold)-r$(tput sgr0) Create a radio station from an artist, album or song.
    $(tput bold)-h$(tput sgr0) Show help
    $(tput bold)-c$(tput sgr0) Clear the queue in mpd before adding songs
    "
    exit;
}

# Default variables
numtracks="100" # Max number of tracks to get
searchtype="get_by_search"
option="searchartist"


# Search functions
searchartist () {
    search1="artist&artist=${artist// /%}";
    search2="&num_tracks=$numtracks";
}

searchalbum () {
    searchartist;
    search1="album&artist=${artist// /%}&title=${title// /%}";
}

searchsong () {
    searchartist;
    search1="song&artist=${artist// /%}&title=${title// /%}";
}

# Options
while getopts "hcasr" opt; do
        case $opt in
                h)
                        usage
                        ;;
                c)
                        doclear="mpc -q clear"
                        ;;
                a)
                        option="searchalbum"
                        ;;
                s)
                        option="searchsong"
                        ;;
                r)
                        searchtype="get_new_station_by_search"
                        ;;
                \?)
                        echo "Invalid option"
                        usage
                        ;;
        esac
        shift $((OPTIND-1))
done

# Get MPD config from ~/.config/mpd/mpd.conf
if grep -Fq "bind_to_address" $HOME/.config/mpd/mpd.conf; then
    mpd_host=$(grep -F "bind_to_address" $HOME/.config/mpd/mpd.conf \
        | cut -d '"' -f2)
else
    mpd_host="localhost"
fi

if grep -Fq "port" $HOME/.config/mpd/mpd.conf; then
    mpd_port=$(grep -F "bind_to_address" $HOME/.config/mpd/mpd.conf \
        | cut -d '"' -f2)
else
    mpd_port="6600"
fi

# Get GMusicProxy config from ~/.config/gmusicproxy.cfg
if grep -Fq "host" $HOME/.config/gmusicproxy.cfg; then
    gmp_host=$(grep -F "host" $HOME/.config/gmusicproxy.cfg \
        | cut -d '=' -f2 | sed 's/^[ \t]*//')
else
    gmp_host="localhost"
fi
if grep -Fq "port" $HOME/.config/gmusicproxy.cfg; then
    gmp_port=$(grep -F "port" $HOME/.config/gmusicproxy.cfg \
        | cut -d '=' -f2 | sed 's/^[ \t]*//')
else
    gmp_port="9999"
fi

# Check if artist/title is given and prompt if not
if (( "$#" != 0 )); then
        IFS="-" read -r artist title <<< "$@"
        artist="$(echo -e "${artist}" | sed -e 's/[[:space:]]*$//')"
        title="$(echo -e "${title}" | sed -e 's/^[[:space:]]*//')"
else
        printf "Artist: "
        read artist
        if [ $option != "searchartist" ]; then
                printf "Title: "
                read title
        fi
fi

# Call functions
$option
$doclear

# Get music with GMusicProxy
curl -s "http://$gmp_host:$gmp_port/$searchtype?type=$search1$search2" | tee /tmp/current.m3u | grep -v "^#" | while read url; do mpc add "$url"; done

# Import playlist into arrays
while read line; do
    p_artist+=("${line%% - *}")
    tmp="${line#* - }"
    p_title+=("${tmp% - *}")
    p_album+=("${line##* - }")
done <<< "$(cat /tmp/current.m3u | sed -n 0~2p | sed -e 's/.*[0-9],//')"

# Get the current playlist info
exec 5<> /dev/tcp/$mpd_host/$mpd_port 2>/dev/null
sleep 0.5s
echo "playlistid" >&5
echo "close" >&5
idlist=($(cat <&5 | sed '/ Id: /,/ file:/d' | sed -n '/^Id: /p' | sed 's/Id: //'))
exec 5>&-

# Add tags
exec 5<> /dev/tcp/$mpd_host/$mpd_port 2>/dev/null
sleep 0.5s
for ((i=${#idlist[@]}-${#p_artist[@]}, j=0; i<${#p_artist[@]}, j<${#p_artist[@]}; i++, j++))
do
    echo "cleartagid ${idlist[$i]}" >&5
    echo "addtagid ${idlist[$i]} artist \"${p_artist[$j]}\"" >&5
    echo "addtagid ${idlist[$i]} title \"${p_title[$j]}\"" >&5
    echo "addtagid ${idlist[$i]} album \"${p_album[$j]}\"" >&5
done
echo "close" >&5
exec 5>&-

mpc -q  play
